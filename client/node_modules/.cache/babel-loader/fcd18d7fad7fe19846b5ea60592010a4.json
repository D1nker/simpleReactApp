{"ast":null,"code":"var _jsxFileName = \"/Users/dinker/Projects/React/simpleApp/src/components/todo/Todos.jsx\";\nimport React, { useEffect, useReducer, useState, Fragment } from 'react';\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../assets/css/App.css';\nimport TodoForm from './TodoForm';\nimport todoReducer from '../../reducer/todo.reducer';\nimport { URL, FILTER } from '../../app.constant';\nimport filterReducer from '../../reducer/filter.reducer';\nimport filterTodos from './todo.filter';\n\nconst Todos = () => {\n  const initialState = {\n    isLoading: true,\n    isError: false,\n    todos: [],\n    nextTodoId: 0,\n    newTodoLabel: ''\n  };\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n  const [filter, dispatchFilter] = useReducer(filterReducer, 'ALL');\n  const {\n    todos,\n    newTodoLabel,\n    isLoading,\n    isError\n  } = state;\n  const [focus, setFocus] = useState(false);\n  const [newTodo, setNewTodo] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_INIT'\n      });\n      await fetch(URL.TODOS_URL).then(res => res.json()).then(result => dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: result\n      })).catch(error => {\n        dispatch({\n          type: 'FETCH_FAILURE'\n        });\n        Error(`Something went wrong... See ${error}`);\n      });\n    };\n\n    fetchData();\n  }, []); // second empty array parameter to encure that useEffect is running once\n\n  const filteredTodos = filterTodos(todos, filter);\n\n  const handleShowAll = () => dispatchFilter({\n    type: FILTER.SHOW_ALL\n  });\n\n  const handleShowCompleted = () => dispatchFilter({\n    type: FILTER.SHOW_COMPLETED\n  });\n\n  const handleShowIncompleted = () => dispatchFilter({\n    type: FILTER.SHOW_INCOMPLETED\n  }); // we could've used 1 function to make this work\n  // const handleFilterDisplay = (filter) => dispatchFilter({type: filter})\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-todos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, isError && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }\n  }, \"Something went wrong...\"), isLoading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  }, \"Loading ...\") || /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"You have \", filteredTodos.length, \" to do today\"), /*#__PURE__*/React.createElement(TodoForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-todoItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, filteredTodos.map(todo => {\n    return /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Checkbox, {\n      checked: todo.completed,\n      onChange: ({\n        target\n      }) => dispatch({\n        type: target.checked ? 'COMPLETE_TODO' : 'INCOMPLETE_TODO',\n        payload: todo.id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      name: `todo-${todo.id}`,\n      value: todo.name,\n      onChange: () => {} // submit\n      ,\n      onFocus: () => setFocus(true),\n      onBlur: () => setFocus(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }), focus ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-sm ml-2 mr-2\",\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 28\n      }\n    }, \"Submit\") : null, focus ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-sm mr-2\",\n      variant: \"danger\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }\n    }, \"Delete\") : null);\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    onClick: handleShowAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Show All\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    onClick: handleShowCompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Show Complete\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    onClick: handleShowIncompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Show Incomplete\")))));\n};\n\nexport default Todos;","map":{"version":3,"sources":["/Users/dinker/Projects/React/simpleApp/src/components/todo/Todos.jsx"],"names":["React","useEffect","useReducer","useState","Fragment","Button","FormControl","InputGroup","TodoForm","todoReducer","URL","FILTER","filterReducer","filterTodos","Todos","initialState","isLoading","isError","todos","nextTodoId","newTodoLabel","state","dispatch","filter","dispatchFilter","focus","setFocus","newTodo","setNewTodo","fetchData","type","fetch","TODOS_URL","then","res","json","result","payload","catch","error","Error","filteredTodos","handleShowAll","SHOW_ALL","handleShowCompleted","SHOW_COMPLETED","handleShowIncompleted","SHOW_INCOMPLETED","length","map","todo","id","completed","target","checked","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState, Fragment } from 'react';\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../assets/css/App.css';\nimport TodoForm from './TodoForm';\nimport todoReducer from '../../reducer/todo.reducer';\nimport { URL, FILTER } from '../../app.constant';\nimport filterReducer from '../../reducer/filter.reducer';\nimport filterTodos from './todo.filter';\n\nconst Todos = () => {\n  const initialState = {\n    isLoading: true,\n    isError: false,\n    todos: [],\n    nextTodoId: 0,\n    newTodoLabel: '',\n  };\n\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n  const [filter, dispatchFilter] = useReducer(filterReducer, 'ALL');\n  const { todos, newTodoLabel, isLoading, isError } = state;\n\n  const [focus, setFocus] = useState(false);\n  const [newTodo, setNewTodo] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' })\n      await fetch(URL.TODOS_URL)\n        .then((res) => res.json())\n        .then((result) =>\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: result,\n          }),\n        )\n        .catch((error) => {\n          dispatch({ type: 'FETCH_FAILURE' })\n          Error(`Something went wrong... See ${error}`)\n        })\n    }\n    fetchData()\n  }, []); // second empty array parameter to encure that useEffect is running once\n\n\n  const filteredTodos = filterTodos(todos, filter);\n\n  const handleShowAll = () => dispatchFilter({ type: FILTER.SHOW_ALL });\n  const handleShowCompleted = () => dispatchFilter({ type: FILTER.SHOW_COMPLETED });\n  const handleShowIncompleted = () => dispatchFilter({ type: FILTER.SHOW_INCOMPLETED });\n  // we could've used 1 function to make this work\n  // const handleFilterDisplay = (filter) => dispatchFilter({type: filter})\n\n  return (\n    <div className=\"App-todos\">\n      { isError && <h1>Something went wrong...</h1> }\n      {\n        (isLoading && <h1>Loading ...</h1>)\n        ||\n        <Fragment>\n          <h1>You have {filteredTodos.length} to do today</h1>\n          <TodoForm />\n          <div className=\"App-todoItem\">\n          {\n            filteredTodos.map(todo => {\n              return (\n                <InputGroup className=\"mb-3\" key={todo.id}>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox\n                      checked={todo.completed}\n                      onChange={({ target }) => dispatch({\n                        type: target.checked ? 'COMPLETE_TODO' : 'INCOMPLETE_TODO',\n                        payload: todo.id\n                      })}\n                    />\n                  </InputGroup.Prepend>\n                  <FormControl\n                    name={`todo-${todo.id}`}\n                    value={todo.name}\n                    onChange={() => {}} // submit\n                    onFocus={() => setFocus(true)}\n                    onBlur={() => setFocus(false)}\n                  />\n                  {focus ? <Button className=\"btn btn-sm ml-2 mr-2\" variant=\"success\" type=\"submit\">Submit</Button> : null}\n                  {focus ? <Button className=\"btn btn-sm mr-2\" variant=\"danger\" type=\"submit\">Delete</Button> : null}\n                </InputGroup>\n              )\n            })\n          }\n          <div className=\"btn-filter\">\n            <Button className=\"mr-1\" onClick={handleShowAll}>Show All</Button>\n            <Button className=\"mr-1\" onClick={handleShowCompleted}>Show Complete</Button>\n            <Button className=\"mr-1\" onClick={handleShowIncompleted}>Show Incomplete</Button>\n          </div>\n         </div>\n        </Fragment>\n      }\n    </div>\n  );\n}\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}