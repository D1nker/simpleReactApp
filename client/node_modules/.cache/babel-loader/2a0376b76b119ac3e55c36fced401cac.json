{"ast":null,"code":"var _jsxFileName = \"/Users/dinker/Projects/React/simpleApp/client/src/components/MainContent.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../assets/css/App.css';\nimport Button from 'react-bootstrap/Button';\n\nconst MainContent = ({\n  initialCount = 0\n}) => {\n  // Déclaration d'une nouvelle variable d'état, que l'on appellera “count”\n  // const value = useState();\n  // console.log(value);\n  const [count, setCount] = useState(initialCount);\n  const prevCountRef = useRef(); // Similaire à componentDidMount et componentDidUpdate :\n\n  useEffect(() => {\n    prevCountRef.current = count;\n    document.title = `Vous avez cliqué ${count} fois`;\n  }); // useEffect(() => {\n  //   const intervalId = setInterval(() => {\n  //       setCount(prevCount => prevCount + 1)\n  //   }, 1000)\n  //   return () => clearInterval(intervalId)\n  // }, [])\n\n  const prevCount = prevCountRef.current;\n  console.log(prevCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"You clicked \", count, \" times\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"mr-1\",\n    size: \"lg\",\n    onClick: () => setCount(prevCount => prevCount + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"mr-1\",\n    size: \"lg\",\n    onClick: () => setCount(prevCount => prevCount - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"mr-1\",\n    size: \"lg\",\n    onClick: () => setCount(initialCount),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Reset\"))));\n};\n\nexport default MainContent;","map":{"version":3,"sources":["/Users/dinker/Projects/React/simpleApp/client/src/components/MainContent.jsx"],"names":["React","useState","useEffect","useRef","Button","MainContent","initialCount","count","setCount","prevCountRef","current","document","title","prevCount","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,YAAY,GAAG;AAAjB,CAAD,KAA0B;AAC5C;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,YAAD,CAAlC;AAEA,QAAMG,YAAY,GAAGN,MAAM,EAA3B,CAN4C,CAO5C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACC,OAAb,GAAuBH,KAAvB;AACAI,IAAAA,QAAQ,CAACC,KAAT,GAAkB,oBAAmBL,KAAM,OAA3C;AACD,GAHQ,CAAT,CAR4C,CAa5C;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMM,SAAS,GAAGJ,YAAY,CAACC,OAA/B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBN,KAAhB,WADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACK,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAUE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,OAAO,EAAE,MAAML,QAAQ,CAACK,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAVF,eAmBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,OAAO,EAAE,MAAML,QAAQ,CAACF,YAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CAHF,CADF,CADF;AAoCD,CA3DD;;AA6DA,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../assets/css/App.css';\nimport Button from 'react-bootstrap/Button';\n\nconst MainContent = ({ initialCount = 0 }) => {\n  // Déclaration d'une nouvelle variable d'état, que l'on appellera “count”\n  // const value = useState();\n  // console.log(value);\n  const [count, setCount] = useState(initialCount);\n\n  const prevCountRef = useRef();\n  // Similaire à componentDidMount et componentDidUpdate :\n  useEffect(() => {\n    prevCountRef.current = count;\n    document.title = `Vous avez cliqué ${count} fois`;\n  });\n\n  // useEffect(() => {\n  //   const intervalId = setInterval(() => {\n  //       setCount(prevCount => prevCount + 1)\n  //   }, 1000)\n  //   return () => clearInterval(intervalId)\n  // }, [])\n\n  const prevCount = prevCountRef.current;\n  console.log(prevCount);\n\n  return (\n    <div className=\"App-main-content\">\n      <main>\n        <p>You clicked {count} times</p>\n\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"mr-1\"\n            size=\"lg\"\n            onClick={() => setCount(prevCount => prevCount + 1)}\n          >\n            +\n          </Button>\n\n          <Button\n            variant=\"primary\"\n            className=\"mr-1\"\n            size=\"lg\"\n            onClick={() => setCount(prevCount => prevCount - 1)}\n          >\n            -\n          </Button>\n\n          <Button\n            variant=\"primary\"\n            className=\"mr-1\"\n            size=\"lg\"\n            onClick={() => setCount(initialCount)}\n          >\n            Reset\n          </Button>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default MainContent;\n"]},"metadata":{},"sourceType":"module"}