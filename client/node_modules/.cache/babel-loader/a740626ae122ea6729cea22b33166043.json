{"ast":null,"code":"var _jsxFileName = \"/Users/dinker/Projects/React/simpleApp/client/src/components/product/Products.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport '../../assets/css/App.css';\nimport ProductCard from './ProductCard';\n\nconst Products = props => {\n  const [products, setProducts] = useState([]);\n  const productsUrl = 'http://localhost:3001/products';\n\n  const fetchResource = (url, setter) => fetch(url).then(res => res.json()).then(result => setter(result)); // on peut avoir autant de useEffect qu'on veut\n  // second empty array parameter to encure that useEffect is running once\n  // insert var you wanna \"watch\" here and make DOM updates\n\n\n  useEffect(() => {\n    fetchResource(productsUrl, setProducts);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(ProductCard, {\n    key: product.id,\n    name: product.name,\n    description: product.description,\n    price: product.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Products;","map":{"version":3,"sources":["/Users/dinker/Projects/React/simpleApp/client/src/components/product/Products.jsx"],"names":["React","useEffect","useState","ProductCard","Products","props","products","setProducts","productsUrl","fetchResource","url","setter","fetch","then","res","json","result","map","product","id","name","description","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,0BAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMM,WAAW,GAAG,gCAApB;;AAEA,QAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiBC,KAAK,CAACF,GAAD,CAAL,CACpCG,IADoC,CAC/BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADwB,EAEpCF,IAFoC,CAE/BG,MAAM,IAAIL,MAAM,CAACK,MAAD,CAFe,CAAvC,CAJ0B,CAS1B;AACA;AACA;;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,aAAa,CAACD,WAAD,EAAcD,WAAd,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,QAAQ,CAACW,GAAT,CAAaC,OAAO,iBAClB,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,IAAA,IAAI,EAAED,OAAO,CAACE,IAFhB;AAGE,IAAA,WAAW,EAAEF,OAAO,CAACG,WAHvB;AAIE,IAAA,KAAK,EAAEH,OAAO,CAACI,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AAcD,CA9BD;;AAgCA,eAAelB,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../../assets/css/App.css';\nimport ProductCard from './ProductCard';\n\nconst Products = (props) => {\n  const [products, setProducts] = useState([]);\n  const productsUrl = 'http://localhost:3001/products';\n\n  const fetchResource = (url, setter) => fetch(url)\n    .then(res => res.json())\n    .then(result => setter(result))\n  ;\n\n  // on peut avoir autant de useEffect qu'on veut\n  // second empty array parameter to encure that useEffect is running once\n  // insert var you wanna \"watch\" here and make DOM updates\n  useEffect(() => {\n    fetchResource(productsUrl, setProducts);\n  }, []);\n\n  return (\n    <div className=\"App-products\">\n      {\n        products.map(product =>\n          <ProductCard\n            key={product.id}\n            name={product.name}\n            description={product.description}\n            price={product.price}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}