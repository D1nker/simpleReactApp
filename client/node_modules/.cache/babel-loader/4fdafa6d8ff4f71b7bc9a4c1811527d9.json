{"ast":null,"code":"var _jsxFileName = \"/Users/dinker/Projects/React/simpleApp/src/components/todo/Todos.jsx\";\nimport React, { useEffect, useReducer, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../assets/css/App.css';\nimport todoReducer from '../../reducer/todo.reducer';\nimport { URL, FILTER } from '../../app.constant';\nimport filterReducer from '../../reducer/filter.reducer';\nimport filterTodos from './todo.filter';\n\nconst Todos = () => {\n  const initialState = {\n    isLoading: true,\n    isError: false,\n    todos: [],\n    nextTodoId: 0,\n    newTodoLabel: 'Learn smthing new ?'\n  };\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n  const [filter, dispatchFilter] = useReducer(filterReducer, 'ALL');\n  const {\n    todos,\n    newTodoLabel,\n    isLoading,\n    isError\n  } = state;\n  const [focus, setFocus] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_INIT'\n      });\n      await axios.get(URL.TODOS).then(res => res.data).then(result => dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: result\n      })).catch(error => {\n        dispatch({\n          type: 'FETCH_FAILURE'\n        });\n        Error(`Something went wrong... See ${error}`);\n      });\n    };\n\n    fetchData();\n  }, []); // second empty array parameter to encure that useEffect is running once\n\n  const filteredTodos = filterTodos(todos, filter);\n\n  const handleShowAll = () => dispatchFilter({\n    type: FILTER.SHOW_ALL\n  });\n\n  const handleShowCompleted = () => dispatchFilter({\n    type: FILTER.SHOW_COMPLETED\n  });\n\n  const handleShowIncompleted = () => dispatchFilter({\n    type: FILTER.SHOW_INCOMPLETED\n  }); // we could've used 1 function to make this work\n  // const handleFilterDisplay = (filter) => dispatchFilter({type: filter})\n\n\n  const handleTodoSubmit = todo => {\n    console.log(todo);\n    console.log(filteredTodos);\n\n    if (filteredTodos.some(todo.id)) {\n      console.log('got it');\n    }\n\n    axios.post(URL.TODOS, {\n      name: todo.name,\n      completed: false,\n      editing: false\n    }).then(res => console.log(res));\n  };\n\n  const handleTodoDelete = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-todos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, isError && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Something went wrong...\"), isLoading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }\n  }, \"Loading ...\") || /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"You have \", filteredTodos.length, \" to do today\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-new-todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    name: \"task\",\n    value: newTodoLabel,\n    onChange: ({\n      target\n    }) => dispatch({\n      type: 'UPDATE_TODO_LABEL',\n      payload: target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    bsstyle: \"primary\",\n    className: \"ml-2\",\n    type: \"submit\",\n    onClick: e => {\n      e.preventDefault();\n      dispatch({\n        type: 'ADD_TODO'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-todo-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, filteredTodos.map(todo => {\n    return /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Checkbox, {\n      checked: todo.completed,\n      onChange: ({\n        target\n      }) => dispatch({\n        type: target.checked ? 'COMPLETE_TODO' : 'INCOMPLETE_TODO',\n        payload: todo.id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      name: `todo-${todo.id}`,\n      value: todo.name,\n      onChange: () => {} // submit\n      ,\n      onFocus: () => setFocus(true) // onBlur={() => setFocus(false)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }), focus ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-sm ml-2 mr-2\",\n      variant: \"success\",\n      type: \"submit\",\n      onClick: () => handleTodoSubmit(todo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"Submit\") : null, focus ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-sm mr-2\",\n      variant: \"danger\",\n      type: \"submit\",\n      onClick: handleTodoDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Delete\") : null);\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    onClick: handleShowAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"Show All\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    onClick: handleShowCompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Show Complete\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    onClick: handleShowIncompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"Show Incomplete\")))));\n};\n\nexport default Todos;","map":{"version":3,"sources":["/Users/dinker/Projects/React/simpleApp/src/components/todo/Todos.jsx"],"names":["React","useEffect","useReducer","useState","axios","Button","Form","FormControl","InputGroup","todoReducer","URL","FILTER","filterReducer","filterTodos","Todos","initialState","isLoading","isError","todos","nextTodoId","newTodoLabel","state","dispatch","filter","dispatchFilter","focus","setFocus","fetchData","type","get","TODOS","then","res","data","result","payload","catch","error","Error","filteredTodos","handleShowAll","SHOW_ALL","handleShowCompleted","SHOW_COMPLETED","handleShowIncompleted","SHOW_INCOMPLETED","handleTodoSubmit","todo","console","log","some","id","post","name","completed","editing","handleTodoDelete","length","target","value","e","preventDefault","map","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../assets/css/App.css';\nimport todoReducer from '../../reducer/todo.reducer';\nimport { URL, FILTER } from '../../app.constant';\nimport filterReducer from '../../reducer/filter.reducer';\nimport filterTodos from './todo.filter';\n\nconst Todos = () => {\n  const initialState = {\n    isLoading: true,\n    isError: false,\n    todos: [],\n    nextTodoId: 0,\n    newTodoLabel: 'Learn smthing new ?'\n  };\n\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n  const [filter, dispatchFilter] = useReducer(filterReducer, 'ALL');\n  const { todos, newTodoLabel, isLoading, isError } = state;\n  const [focus, setFocus] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n      await axios\n        .get(URL.TODOS)\n        .then((res) => res.data)\n        .then((result) =>\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: result\n          })\n        )\n        .catch((error) => {\n          dispatch({ type: 'FETCH_FAILURE' });\n          Error(`Something went wrong... See ${error}`);\n        });\n    };\n    fetchData();\n  }, []); // second empty array parameter to encure that useEffect is running once\n\n  const filteredTodos = filterTodos(todos, filter);\n\n  const handleShowAll = () => dispatchFilter({ type: FILTER.SHOW_ALL });\n  const handleShowCompleted = () => dispatchFilter({ type: FILTER.SHOW_COMPLETED });\n  const handleShowIncompleted = () => dispatchFilter({ type: FILTER.SHOW_INCOMPLETED });\n  // we could've used 1 function to make this work\n  // const handleFilterDisplay = (filter) => dispatchFilter({type: filter})\n\n  const handleTodoSubmit = (todo) => {\n    console.log(todo);\n    console.log(filteredTodos);\n    if (filteredTodos.some(todo.id)) {\n      console.log('got it');\n    }\n    axios\n      .post(URL.TODOS, {\n        name: todo.name,\n        completed: false,\n        editing: false\n      })\n      .then((res) => console.log(res));\n  };\n  const handleTodoDelete = () => {};\n\n  return (\n    <div className=\"App-todos\">\n      {isError && <h1>Something went wrong...</h1>}\n      {(isLoading && <h1>Loading ...</h1>) || (\n        <>\n          <h1>You have {filteredTodos.length} to do today</h1>\n          <div className=\"App-new-todo\">\n            <Form inline>\n              <InputGroup>\n                <FormControl\n                  type=\"text\"\n                  name=\"task\"\n                  value={newTodoLabel}\n                  onChange={({ target }) =>\n                    dispatch({\n                      type: 'UPDATE_TODO_LABEL',\n                      payload: target.value\n                    })\n                  }\n                />\n              </InputGroup>\n              <Button\n                bsstyle=\"primary\"\n                className=\"ml-2\"\n                type=\"submit\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  dispatch({ type: 'ADD_TODO' });\n                }}\n              >\n                Add\n              </Button>\n            </Form>\n          </div>\n\n          <div className=\"App-todo-item\">\n            {filteredTodos.map((todo) => {\n              return (\n                <InputGroup className=\"mb-3\" key={todo.id}>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox\n                      checked={todo.completed}\n                      onChange={({ target }) =>\n                        dispatch({\n                          type: target.checked ? 'COMPLETE_TODO' : 'INCOMPLETE_TODO',\n                          payload: todo.id\n                        })\n                      }\n                    />\n                  </InputGroup.Prepend>\n                  <FormControl\n                    name={`todo-${todo.id}`}\n                    value={todo.name}\n                    onChange={() => {}} // submit\n                    onFocus={() => setFocus(true)}\n                    // onBlur={() => setFocus(false)}\n                  />\n                  {focus ? (\n                    <Button\n                      className=\"btn btn-sm ml-2 mr-2\"\n                      variant=\"success\"\n                      type=\"submit\"\n                      onClick={() => handleTodoSubmit(todo)}\n                    >\n                      Submit\n                    </Button>\n                  ) : null}\n                  {focus ? (\n                    <Button\n                      className=\"btn btn-sm mr-2\"\n                      variant=\"danger\"\n                      type=\"submit\"\n                      onClick={handleTodoDelete}\n                    >\n                      Delete\n                    </Button>\n                  ) : null}\n                </InputGroup>\n              );\n            })}\n            <div className=\"btn-filter\">\n              <Button className=\"mr-1\" onClick={handleShowAll}>\n                Show All\n              </Button>\n              <Button className=\"mr-1\" onClick={handleShowCompleted}>\n                Show Complete\n              </Button>\n              <Button className=\"mr-1\" onClick={handleShowIncompleted}>\n                Show Incomplete\n              </Button>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}