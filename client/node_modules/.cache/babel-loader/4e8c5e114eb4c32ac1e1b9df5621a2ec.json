{"ast":null,"code":"export default function todoReducer(state, action) {\n  console.log(state);\n\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state,\n        isLoading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        todos: action.payload\n      };\n\n    case 'FETCH_FAILURE':\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    case 'ADD_TODO':\n      return {\n        todos: [...state.todos, {\n          id: state.nextTodoId,\n          name: state.newTodoLabel,\n          completed: false\n        }],\n        nextTodoId: state.nextTodoId + 1,\n        newTodoLabel: ''\n      };\n\n    case 'REMOVE_TODO':\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n\n    case 'COMPLETE_TODO':\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.payload ? { ...todo,\n          completed: true\n        } : todo)\n      };\n\n    case 'INCOMPLETE_TODO':\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.payload ? { ...todo,\n          completed: false\n        } : todo)\n      };\n\n    case 'UPDATE_TODO_LABEL':\n      return { ...state,\n        newTodoLabel: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dinker/Projects/React/simpleApp/src/reducer/todo.reducer.js"],"names":["todoReducer","state","action","console","log","type","isLoading","isError","todos","payload","id","nextTodoId","name","newTodoLabel","completed","filter","todo","map"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAK,eAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELK,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAEN,MAAM,CAACO;AAJT,OAAP;;AAMF,SAAK,eAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELK,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,UAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAE,CACL,GAAGP,KAAK,CAACO,KADJ,EAEL;AACEE,UAAAA,EAAE,EAAET,KAAK,CAACU,UADZ;AAEEC,UAAAA,IAAI,EAAEX,KAAK,CAACY,YAFd;AAGEC,UAAAA,SAAS,EAAE;AAHb,SAFK,CADF;AASLH,QAAAA,UAAU,EAAEV,KAAK,CAACU,UAAN,GAAmB,CAT1B;AAULE,QAAAA,YAAY,EAAE;AAVT,OAAP;;AAYF,SAAK,aAAL;AACE,aAAO,EACL,GAAGZ,KADE;AAELO,QAAAA,KAAK,EAAEP,KAAK,CAACO,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYR,MAAM,CAACO,OAAhD;AAFF,OAAP;;AAIF,SAAK,eAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELO,QAAAA,KAAK,EAAEP,KAAK,CAACO,KAAN,CAAYS,GAAZ,CAAiBD,IAAD,IACrBA,IAAI,CAACN,EAAL,KAAYR,MAAM,CAACO,OAAnB,GAA6B,EAAE,GAAGO,IAAL;AAAWF,UAAAA,SAAS,EAAE;AAAtB,SAA7B,GAA4DE,IADvD;AAFF,OAAP;;AAMF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGf,KADE;AAELO,QAAAA,KAAK,EAAEP,KAAK,CAACO,KAAN,CAAYS,GAAZ,CAAiBD,IAAD,IACrBA,IAAI,CAACN,EAAL,KAAYR,MAAM,CAACO,OAAnB,GAA6B,EAAE,GAAGO,IAAL;AAAWF,UAAAA,SAAS,EAAE;AAAtB,SAA7B,GAA6DE,IADxD;AAFF,OAAP;;AAMF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGf,KADE;AAELY,QAAAA,YAAY,EAAEX,MAAM,CAACO;AAFhB,OAAP;;AAIF;AACE,aAAOR,KAAP;AAzDJ;AA2DD","sourcesContent":["export default function todoReducer(state, action) {\n  console.log(state);\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        todos: action.payload\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    case 'ADD_TODO':\n      return {\n        todos: [\n          ...state.todos,\n          {\n            id: state.nextTodoId,\n            name: state.newTodoLabel,\n            completed: false\n          }\n        ],\n        nextTodoId: state.nextTodoId + 1,\n        newTodoLabel: ''\n      };\n    case 'REMOVE_TODO':\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload)\n      };\n    case 'COMPLETE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.payload ? { ...todo, completed: true } : todo\n        )\n      };\n    case 'INCOMPLETE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.payload ? { ...todo, completed: false } : todo\n        )\n      };\n    case 'UPDATE_TODO_LABEL':\n      return {\n        ...state,\n        newTodoLabel: action.payload\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}