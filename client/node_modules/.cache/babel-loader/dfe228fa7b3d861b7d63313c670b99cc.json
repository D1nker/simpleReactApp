{"ast":null,"code":"export default function todoReducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state,\n        isLoading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        todos: action.payload\n      };\n\n    case 'FETCH_FAILURE':\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    case 'ADD_TODO':\n      console.log(action);\n      return {\n        todos: [...state.todos, {\n          id: state.nextTodoId,\n          // name: action.payload,\n          // name: state.newTodoLabel,\n          completed: false\n        }],\n        nextTodoId: state.nextTodoId + 1,\n        newTodoLabel: ''\n      };\n\n    case 'REMOVE_TODO':\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n\n    case 'COMPLETE_TODO':\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.payload ? { ...todo,\n          completed: true\n        } : todo)\n      };\n\n    case 'INCOMPLETE_TODO':\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === action.payload ? { ...todo,\n          completed: false\n        } : todo)\n      };\n\n    case 'UPDATE_TODO_LABEL':\n      return { ...state,\n        newTodoLabel: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dinker/Projects/React/simpleApp/src/reducer/todo.reducer.js"],"names":["todoReducer","state","action","type","isLoading","isError","todos","payload","console","log","id","nextTodoId","completed","newTodoLabel","filter","todo","map"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAK,eAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAEJ,MAAM,CAACK;AAJT,OAAP;;AAMF,SAAK,eAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,UAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,aAAO;AACLI,QAAAA,KAAK,EAAE,CACL,GAAGL,KAAK,CAACK,KADJ,EAEL;AACEI,UAAAA,EAAE,EAAET,KAAK,CAACU,UADZ;AAEE;AACA;AACAC,UAAAA,SAAS,EAAE;AAJb,SAFK,CADF;AAULD,QAAAA,UAAU,EAAEV,KAAK,CAACU,UAAN,GAAmB,CAV1B;AAWLE,QAAAA,YAAY,EAAE;AAXT,OAAP;;AAaF,SAAK,aAAL;AACE,aAAO,EACL,GAAGZ,KADE;AAELK,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYQ,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYR,MAAM,CAACK,OAAhD;AAFF,OAAP;;AAIF,SAAK,eAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELK,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYU,GAAZ,CAAiBD,IAAD,IACrBA,IAAI,CAACL,EAAL,KAAYR,MAAM,CAACK,OAAnB,GAA6B,EAAE,GAAGQ,IAAL;AAAWH,UAAAA,SAAS,EAAE;AAAtB,SAA7B,GAA4DG,IADvD;AAFF,OAAP;;AAMF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGd,KADE;AAELK,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYU,GAAZ,CAAiBD,IAAD,IACrBA,IAAI,CAACL,EAAL,KAAYR,MAAM,CAACK,OAAnB,GAA6B,EAAE,GAAGQ,IAAL;AAAWH,UAAAA,SAAS,EAAE;AAAtB,SAA7B,GAA6DG,IADxD;AAFF,OAAP;;AAMF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGd,KADE;AAELY,QAAAA,YAAY,EAAEX,MAAM,CAACK;AAFhB,OAAP;;AAIF;AACE,aAAON,KAAP;AA3DJ;AA6DD","sourcesContent":["export default function todoReducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        todos: action.payload\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    case 'ADD_TODO':\n      console.log(action);\n      return {\n        todos: [\n          ...state.todos,\n          {\n            id: state.nextTodoId,\n            // name: action.payload,\n            // name: state.newTodoLabel,\n            completed: false\n          }\n        ],\n        nextTodoId: state.nextTodoId + 1,\n        newTodoLabel: ''\n      };\n    case 'REMOVE_TODO':\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload)\n      };\n    case 'COMPLETE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.payload ? { ...todo, completed: true } : todo\n        )\n      };\n    case 'INCOMPLETE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.payload ? { ...todo, completed: false } : todo\n        )\n      };\n    case 'UPDATE_TODO_LABEL':\n      return {\n        ...state,\n        newTodoLabel: action.payload\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}